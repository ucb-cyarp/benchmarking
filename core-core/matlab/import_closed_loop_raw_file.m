function [ArrayLengthBlocks, BlockSizeint32_tElements, ServerControlPeriodIterations, ClientControlPeriodIterations, ControlGainNOPs, InitialNOPs, SteadyClockWalltimems, ErroredCore_Client, TransactionCore_Client, ServerControlChecksCore_Server, SpeedupsCore_Server, SlowdownsCore_Server, ServerNOPsCore_Server, ClientNOPsCore_Server] = import_closed_loop_raw_file(filename, dataLines)
%IMPORTFILE Import data from a text file
%  [ARRAYLENGTHBLOCKS, BLOCKSIZEINT32_TELEMENTS,
%  SERVERCONTROLPERIODITERATIONS, CLIENTCONTROLPERIODITERATIONS,
%  CONTROLGAINNOPS, INITIALNOPS, STEADYCLOCKWALLTIMEMS, ERROREDCORE_Client,
%  TRANSACTIONCORE_Client, SERVERCONTROLCHECKSCORE_Server, SPEEDUPSCORE_Server,
%  SLOWDOWNSCORE_Server, SERVERNOPSCORE_Server, CLIENTNOPSCORE_Server] =
%  IMPORTFILE(FILENAME) reads data from text file FILENAME for the
%  default selection.  Returns the data as column vectors.
%
%  [ARRAYLENGTHBLOCKS, BLOCKSIZEINT32_TELEMENTS,
%  SERVERCONTROLPERIODITERATIONS, CLIENTCONTROLPERIODITERATIONS,
%  CONTROLGAINNOPS, INITIALNOPS, STEADYCLOCKWALLTIMEMS, ERROREDCORE_Client,
%  TRANSACTIONCORE_Client, SERVERCONTROLCHECKSCORE_Server, SPEEDUPSCORE_Server,
%  SLOWDOWNSCORE_Server, SERVERNOPSCORE_Server, CLIENTNOPSCORE_Server] = IMPORTFILE(FILE,
%  DATALINES) reads data for the specified row interval(s) of text file
%  FILENAME. Specify DATALINES as a positive scalar integer or a N-by-2
%  array of positive scalar integers for dis-contiguous row intervals.
%
%  Example:
%  [ArrayLengthBlocks, BlockSizeint32_tElements, ServerControlPeriodIterations, ClientControlPeriodIterations, ControlGainNOPs, InitialNOPs, SteadyClockWalltimems, ErroredCore_Client, TransactionCore_Client, ServerControlChecksCore_Server, SpeedupsCore_Server, SlowdownsCore_Server, ServerNOPsCore_Server, ClientNOPsCore_Server] = importfile("/Users/cyarp/git/benchmarking-github/core-core/results/bwrc-sr-amd-32c/open_loop/results_closed_loop_maxtransactions100000/report_closed_loop_bang_control_raw.csv", [2, Inf]);
%
%  See also READTABLE.
%
% NOTE: THIS IS FOR THE INITIAL CLOSED_LOOP BENCHMARKS BEFORE REFACTORING
% WHICH TOOK PLACE AS PART OF EXPANDING OPEN_LOOP TEST CASES
%
% Auto-generated by MATLAB on 09-Jan-2020 16:09:02

%% Input handling

% If dataLines is not specified, define defaults
if nargin < 2
    dataLines = [2, Inf];
end

%% Setup the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 22);

% Specify range and delimiter
opts.DataLines = dataLines;
opts.Delimiter = ",";

% Specify column names and types
opts.VariableNames = ["ArrayLengthBlocks", "BlockSizeint32_tElements", "ServerControlPeriodIterations", "ClientControlPeriodIterations", "ControlGainNOPs", "InitialNOPs", "SteadyClockWalltimems", "Var8", "Var9", "Var10", "Var11", "Var12", "ErroredCore_Client", "Var1_Server", "TransactionCore_Client", "ServerControlChecksCore_Server", "SpeedupsCore_Server", "SlowdownsCore_Server", "ServerNOPsCore_Server", "ClientNOPsCore_Server", "Var21", "Var22"];
opts.SelectedVariableNames = ["ArrayLengthBlocks", "BlockSizeint32_tElements", "ServerControlPeriodIterations", "ClientControlPeriodIterations", "ControlGainNOPs", "InitialNOPs", "SteadyClockWalltimems", "ErroredCore_Client", "TransactionCore_Client", "ServerControlChecksCore_Server", "SpeedupsCore_Server", "SlowdownsCore_Server", "ServerNOPsCore_Server", "ClientNOPsCore_Server"];
opts.VariableTypes = ["double", "double", "double", "double", "double", "double", "double", "string", "string", "string", "string", "string", "categorical", "string", "double", "double", "double", "double", "double", "double", "string", "string"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Specify variable properties
opts = setvaropts(opts, ["Var8", "Var9", "Var10", "Var11", "Var12", "Var1_Server", "Var21", "Var22"], "WhitespaceRule", "preserve");
opts = setvaropts(opts, ["Var8", "Var9", "Var10", "Var11", "Var12", "ErroredCore_Client", "Var1_Server", "Var21", "Var22"], "EmptyFieldRule", "auto");

% Import the data
tbl = readtable(filename, opts);

%% Convert to output type
ArrayLengthBlocks = tbl.ArrayLengthBlocks;
BlockSizeint32_tElements = tbl.BlockSizeint32_tElements;
ServerControlPeriodIterations = tbl.ServerControlPeriodIterations;
ClientControlPeriodIterations = tbl.ClientControlPeriodIterations;
ControlGainNOPs = tbl.ControlGainNOPs;
InitialNOPs = tbl.InitialNOPs;
SteadyClockWalltimems = tbl.SteadyClockWalltimems;
ErroredCore_Client = tbl.ErroredCore_Client;
TransactionCore_Client = tbl.TransactionCore_Client;
ServerControlChecksCore_Server = tbl.ServerControlChecksCore_Server;
SpeedupsCore_Server = tbl.SpeedupsCore_Server;
SlowdownsCore_Server = tbl.SlowdownsCore_Server;
ServerNOPsCore_Server = tbl.ServerNOPsCore_Server;
ClientNOPsCore_Server = tbl.ClientNOPsCore_Server;
end