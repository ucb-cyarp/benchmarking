function [ArrayLengthBlocks, BlockSizeint32_tElements, BalancingNOPs, SteadyClockWalltimems, ClockCyclesCycleTimems, Clockrdtsc, ExpectedBlockIDCore_Client, StartBlockIDCore_Client, EndBlockIDCore_Client, ErroredCore_Client, ErrorSourceCore_Client, TransactionCore_Client, ExpectedBlockIDCore_Server, StartBlockIDCore_Server, EndBlockIDCore_Server, ErroredCore_Server, ErrorSourceCore_Server, TransactionCore_Server] = import_open_loop_raw_file(filename, dataLines)
%IMPORTFILE Import data from a text file
%  [ARRAYLENGTHBLOCKS, BLOCKSIZEINT32_TELEMENTS, BALANCINGNOPS,
%  STEADYCLOCKWALLTIMEMS, CLOCKCYCLESCYCLETIMEMS, CLOCKRDTSC,
%  EXPECTEDBLOCKIDCORE_Client, STARTBLOCKIDCORE_Client, ENDBLOCKIDCORE_Client,
%  ERROREDCORE_Client, ERRORSOURCECORE_Client, TRANSACTIONCORE_Client,
%  EXPECTEDBLOCKIDCORE_Server, STARTBLOCKIDCORE_Server, ENDBLOCKIDCORE_Server,
%  ERROREDCORE_Server, ERRORSOURCECORE_Server, TRANSACTIONCORE_Server] =
%  IMPORTFILE(FILENAME) reads data from text file FILENAME for the
%  default selection.  Returns the data as column vectors.
%
%  [ARRAYLENGTHBLOCKS, BLOCKSIZEINT32_TELEMENTS, BALANCINGNOPS,
%  STEADYCLOCKWALLTIMEMS, CLOCKCYCLESCYCLETIMEMS, CLOCKRDTSC,
%  EXPECTEDBLOCKIDCORE_Client, STARTBLOCKIDCORE_Client, ENDBLOCKIDCORE_Client,
%  ERROREDCORE_Client, ERRORSOURCECORE_Client, TRANSACTIONCORE_Client,
%  EXPECTEDBLOCKIDCORE_Server, STARTBLOCKIDCORE_Server, ENDBLOCKIDCORE_Server,
%  ERROREDCORE_Server, ERRORSOURCECORE_Server, TRANSACTIONCORE_Server] = IMPORTFILE(FILE,
%  DATALINES) reads data for the specified row interval(s) of text file
%  FILENAME. Specify DATALINES as a positive scalar integer or a N-by-2
%  array of positive scalar integers for dis-contiguous row intervals.
%
%  Example:
%  [ArrayLengthBlocks, BlockSizeint32_tElements, BalancingNOPs, SteadyClockWalltimems, ClockCyclesCycleTimems, Clockrdtsc, ExpectedBlockIDCore_Client, StartBlockIDCore_Client, EndBlockIDCore_Client, ErroredCore_Client, ErrorSourceCore_Client, TransactionCore_Client, ExpectedBlockIDCore_Server, StartBlockIDCore_Server, EndBlockIDCore_Server, ErroredCore_Server, ErrorSourceCore_Server, TransactionCore_Server] = importfile("/Users/cyarp/git/benchmarking-github/core-core/results/bwrc-sr-amd-32c/open_loop/results_open_loop/report_open_loop_raw.csv", [2, Inf]);
%
%  See also READTABLE.
%
% Auto-generated by MATLAB on 08-Jan-2020 1_Server:_Server6:_Server7

%% Input handling

% If dataLines is not specified, define defaults
if nargin < 2
    dataLines = [2, Inf];
end

%% Setup the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 18);

% Specify range and delimiter
opts.DataLines = dataLines;
opts.Delimiter = ",";

% Specify column names and types
opts.VariableNames = ["ArrayLengthBlocks", "BlockSizeint32_tElements", "BalancingNOPs", "SteadyClockWalltimems", "ClockCyclesCycleTimems", "Clockrdtsc", "ExpectedBlockIDCore_Client", "StartBlockIDCore_Client", "EndBlockIDCore_Client", "ErroredCore_Client", "ErrorSourceCore_Client", "TransactionCore_Client", "ExpectedBlockIDCore_Server", "StartBlockIDCore_Server", "EndBlockIDCore_Server", "ErroredCore_Server", "ErrorSourceCore_Server", "TransactionCore_Server"];
opts.VariableTypes = ["double", "double", "double", "double", "double", "double", "double", "double", "double", "categorical", "categorical", "double", "double", "double", "double", "categorical", "categorical", "double"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Specify variable properties
opts = setvaropts(opts, ["ErroredCore_Client", "ErrorSourceCore_Client", "ErroredCore_Server", "ErrorSourceCore_Server"], "EmptyFieldRule", "auto");

% Import the data
tbl = readtable(filename, opts);

%% Convert to output type
ArrayLengthBlocks = tbl.ArrayLengthBlocks;
BlockSizeint32_tElements = tbl.BlockSizeint32_tElements;
BalancingNOPs = tbl.BalancingNOPs;
SteadyClockWalltimems = tbl.SteadyClockWalltimems;
ClockCyclesCycleTimems = tbl.ClockCyclesCycleTimems;
Clockrdtsc = tbl.Clockrdtsc;
ExpectedBlockIDCore_Client = tbl.ExpectedBlockIDCore_Client;
StartBlockIDCore_Client = tbl.StartBlockIDCore_Client;
EndBlockIDCore_Client = tbl.EndBlockIDCore_Client;
ErroredCore_Client = tbl.ErroredCore_Client;
ErrorSourceCore_Client = tbl.ErrorSourceCore_Client;
TransactionCore_Client = tbl.TransactionCore_Client;
ExpectedBlockIDCore_Server = tbl.ExpectedBlockIDCore_Server;
StartBlockIDCore_Server = tbl.StartBlockIDCore_Server;
EndBlockIDCore_Server = tbl.EndBlockIDCore_Server;
ErroredCore_Server = tbl.ErroredCore_Server;
ErrorSourceCore_Server = tbl.ErrorSourceCore_Server;
TransactionCore_Server = tbl.TransactionCore_Server;
end